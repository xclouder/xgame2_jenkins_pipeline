node('macmini_99'){
  def BUILD_DIR = "build"
  def UNITY = "/Applications/Unity5.4.5f1/Unity.app/Contents/MacOS/Unity"
  def PROJECTHOME
  def BUILDHOME
  def BUILDPATH
  def SRC_DIR = "xgame2"

  /*
  stage('Checkout') {

    dir(SRC_DIR)
    {
      stage('Checkout') {
        checkout([$class: 'SubversionSCM', 
              additionalCredentials: [], 
              excludedCommitMessages: '', 
              excludedRegions: '', 
              excludedRevprop: '', 
              excludedUsers: 'buildbot', 
              filterChangelog: false, 
              ignoreDirPropChanges: false, 
              includedRegions: '', 
              locations: [[credentialsId: 'ba63d961-0ede-4e10-9bab-8cc08dfda439',
                     depthOption: 'infinity', 
                     ignoreExternalsOption: true, 
                     local: '.', 
                     remote: "svn://172.16.1.9/ezfun/demo"]],
              workspaceUpdater: [$class: 'UpdateWithRevertUpdater']])
      }
    }

    PROJECTHOME = WORKSPACE + "/" + SRC_DIR
    BUILDHOME = WORKSPACE + "/" + BUILD_DIR
    BUILDPATH = WORKSPACE + "/" + "export"
  }

  stage('Revert') {
    sh """
      cd ${PROJECTHOME}/tools/
      svn status --no-ignore | grep '^[I?]' | cut -c 9- | while IFS= read -r f; do rm -rf "$f"; done
    """
  }

  stage('Clean')
  {
    sh """
    rm -rf ${BUILDHOME}
    mkdir -p ${BUILDHOME}
    mkdir -p ${BUILDPATH}

    mv ${PROJECTHOME}/Assets/PlatformPlugin ${PROJECTHOME}/..
    rm -r ${PROJECTHOME}/Assets/Editor

    cp ${PROJECTHOME}/tools/Android/nguiLib.dll ${PROJECTHOME}/Assets/Plugins/Android/
    cp ${PROJECTHOME}/tools/Android/DataEyeDll.dll ${PROJECTHOME}/Assets/Plugins/Android/
    cp ${PROJECTHOME}/tools/Android/XGame2Util.dll ${PROJECTHOME}/Assets/Plugins/Android/

    #remove AssetBundles
    rm -rf ${PROJECTHOME}/Assets/StreamingAssets/AssetBundles/*
    """
  }

  stage('SeperateTextures')
  {
    sh """
      ${UNITY} -quit -batchmode -projectPath ${PROJECTHOME} -executeMethod TextureAlphaEditor.SeperateAllTexturesRGBandAlphaChannel -buildTarget android -logFile
    """
  }

  stage('HandleTerrainMaskTexture') {
    sh """
      ${UNITY} -quit -batchmode -projectPath ${PROJECTHOME} -executeMethod EZFunTextureTools.HandleTerrainMaskTexture -buildTarget android -logFile
    """
  }

  stage('HandleTexturesToPrefab') {
    sh """
      ${UNITY} -quit -batchmode -projectPath ${PROJECTHOME} -executeMethod EZFunTextureTools.HandleTexturesToPrefab -buildTarget android -logFile
    """
  }

  stage('Archive') {
    archive "${BUILD_DIR}/*.apk"
  }
  */
  stage('Checkout') {
    if (USE_AB)
    {
      print("use ab")
    }
    else{
      print("not use ab")
    }
  }

}