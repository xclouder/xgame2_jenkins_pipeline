node('macmini29'){
  def BUILD_DIR = "build"
  def UNITY
  def PROJECTHOME
  def BUILDHOME
  def BUILDPATH
  def SRC_DIR = "xgame2"
  def OUT_PATH
  def IS_GOOGLE_PRO = true
  def PROJECT_NAME = "X2"
  
  //define by jenkins paramters
  // def MPLATFORM = "tiantuo_android"
  // def MPACKAGENAME = "tiantuo_other"

  stage('PrepareEnv')
  {
    PROJECTHOME = WORKSPACE + "/" + SRC_DIR
    BUILDHOME = WORKSPACE + "/" + BUILD_DIR
    BUILDPATH = WORKSPACE + "/" + "export"
    OUT_PATH = PROJECTHOME + "/tools/Builds"
    UNITY = UNITY_545 + "/Contents/MacOS/Unity"
  }

  stage('Checkout') {

    dir(SRC_DIR)
    {
      stage('Checkout') {
        checkout([$class: 'SubversionSCM', 
              additionalCredentials: [], 
              excludedCommitMessages: '', 
              excludedRegions: '', 
              excludedRevprop: '', 
              excludedUsers: 'buildbot', 
              filterChangelog: false, 
              ignoreDirPropChanges: false, 
              includedRegions: '', 
              locations: [[credentialsId: 'ba63d961-0ede-4e10-9bab-8cc08dfda439',
                     depthOption: 'infinity', 
                     ignoreExternalsOption: true, 
                     local: '.', 
                     remote: "svn://172.16.1.9/ezfun/xgame2/client/branchs/openversion_0_2_0"]],
              workspaceUpdater: [$class: 'UpdateWithRevertUpdater']])
      }
    }
  }

  stage('Revert') {
    sh """
      cd ${PROJECTHOME}/tools/
      svn status --no-ignore | grep '^[I?]' | cut -c 9- | while IFS= read -r f; do rm -rf \"\$f\"; done
    """
  }

  stage('Clean')
  {
    sh """
    rm -rf ${BUILDHOME}
    mkdir -p ${BUILDHOME}
    mkdir -p ${BUILDPATH}

    #mv ${PROJECTHOME}/Assets/PlatformPlugin ${PROJECTHOME}/..
    rm -r ${PROJECTHOME}/Assets/Editor

    cp ${PROJECTHOME}/tools/Android/nguiLib.dll ${PROJECTHOME}/Assets/Plugins/Android/
    #cp ${PROJECTHOME}/tools/Android/DataEyeDll.dll ${PROJECTHOME}/Assets/Plugins/Android/
    cp ${PROJECTHOME}/tools/Android/XGame2Util.dll ${PROJECTHOME}/Assets/Plugins/Android/

    #remove AssetBundles
    rm -rf ${PROJECTHOME}/Assets/StreamingAssets/AssetBundles/*
    """
  }

  stage('SeperateTextures')
  {
    sh """
      ${UNITY} -quit -batchmode -projectPath ${PROJECTHOME} -executeMethod TextureAlphaEditor.SeperateAllTexturesRGBandAlphaChannel -buildTarget android -logFile
    """
  }

  stage('HandleTerrainMaskTexture') {
    sh """
      ${UNITY} -quit -batchmode -projectPath ${PROJECTHOME} -executeMethod EZFunTextureTools.HandleTerrainMaskTexture -buildTarget android -logFile
    """
  }

  stage('HandleTexturesToPrefab') {
    sh """
      ${UNITY} -quit -batchmode -projectPath ${PROJECTHOME} -executeMethod EZFunTextureTools.HandleTexturesToPrefab -buildTarget android -logFile
    """
  }

  stage('BuildAssetBundle') {
    sh """
      ${UNITY} -quit -batchmode -projectPath ${PROJECTHOME} -executeMethod X2AssetsBundleEditor.BuildAllAssetBundleAndroid -buildTarget android -logFile
    """
  }

  stage('RestoreResources') {
    sh """
    #remove Resources that will exist in AssetBundle
    rm -rf ${PROJECTHOME}/tools/Builds/Others/*
    rm -rf ${PROJECTHOME}/tools/Builds/Public/*
    rm -rf ${PROJECTHOME}/tools/Builds/X2/*
    mv -f ${PROJECTHOME}/Assets/XGame/Resources ${PROJECTHOME}/tools/Builds/Others/

    #donot mv scene
    #mkdir -p ${PROJECTHOME}/Assets/XGame/Resources
    #mv -f ${PROJECTHOME}/tools/Builds/Others/Resources/Scene ${PROJECTHOME}/Assets/XGame/Resources/
    #end
    
    mv -f ${PROJECTHOME}/Assets/uLua  ${PROJECTHOME}/tools/Builds/Others/
    mv -f ${PROJECTHOME}/Assets/XGame/Script  ${PROJECTHOME}/tools/Builds/Others/
    mv -f ${PROJECTHOME}/Assets/XGame/Editor  ${PROJECTHOME}/tools/Builds/Others/
    mv -f ${PROJECTHOME}/Assets/XGame/Public/Editor  ${PROJECTHOME}/tools/Builds/Public/
    mv -f ${PROJECTHOME}/Assets/XGame/Public/Scripts  ${PROJECTHOME}/tools/Builds/Public/
    """
  }

  stage('BuildAndroidProject') {
    sh """
      ${UNITY} -quit -batchmode -projectPath ${PROJECTHOME} -executeMethod AutoBuild.BuildAndroidABAPK -outPath ${OUT_PATH} -buildTarget android U3DAllowDebugging=${U3DAllowDebugging} U3DDevelopment=${U3DDevelopment} U3DConnectWithProfiler=${U3DConnectWithProfiler} U3DGoogleProject=${IS_GOOGLE_PRO} ProjectName=${PROJECT_NAME} U3DUSE_AB=${USE_AB} -logFile
    """
  }

  stage('MoveResourceBack') {
    sh """
    #restore Resources removed for build AssetBundle
    mv -f ${PROJECTHOME}/tools/Builds/Others/Resources ${PROJECTHOME}/Assets/XGame/ 
    mv -f ${PROJECTHOME}/tools/Builds/Others/uLua ${PROJECTHOME}/Assets/  
    mv -f ${PROJECTHOME}/tools/Builds/Others/Script ${PROJECTHOME}/Assets/XGame/ 
    mv -f ${PROJECTHOME}/tools/Builds/Others/Editor ${PROJECTHOME}/Assets/XGame/  
    mv -f ${PROJECTHOME}/tools/Builds/Public/Editor ${PROJECTHOME}/Assets/XGame/Public/
    mv -f ${PROJECTHOME}/tools/Builds/Public/Scripts ${PROJECTHOME}/Assets/XGame/Public/
    """
  }


  stage('Gradle Build') {
    sh """
    cd ${PROJECTHOME}/tools
    echo ${MPLATFORM}
    echo ${MPACKAGENAME}
    python build_pack.py ${MPLATFORM} ${MPACKAGENAME}
    cp -f ${PROJECTHOME}/tools/SDK/${MPLATFORM}/app/build/outputs/apk/app-release.apk $BUILDHOME/XGame2_Android_${BUILD_NUMBER}.apk

    rm -rf ${BUILDPATH}
    mv -f ${PROJECTHOME}/tools/SDK/${MPLATFORM} ${BUILDPATH}/
    """
  }

  stage('Archive') {
    archive 'build/*.apk'
  }
}